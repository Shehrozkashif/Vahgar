;buildInfoPackage: chisel3, version: 3.4.3, scalaVersion: 2.12.12, sbtVersion: 1.3.10
circuit top : 
  module alu : 
    input clock : Clock
    input reset : Reset
    output io : {flip A : UInt<32>, flip B : UInt<32>, flip op : UInt<4>, out : UInt<32>}
    
    io.out <= UInt<1>("h00") @[alu.scala 27:9]
    node shiftamount = bits(io.B, 4, 0) @[alu.scala 28:25]
    io.out <= UInt<1>("h00") @[alu.scala 29:10]
    node _T = eq(UInt<4>("h00"), io.op) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _io_out_T = add(io.A, io.B) @[alu.scala 32:22]
      node _io_out_T_1 = tail(_io_out_T, 1) @[alu.scala 32:22]
      io.out <= _io_out_T_1 @[alu.scala 32:14]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<4>("h08"), io.op) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        node _io_out_T_2 = sub(io.A, io.B) @[alu.scala 35:22]
        node _io_out_T_3 = tail(_io_out_T_2, 1) @[alu.scala 35:22]
        io.out <= _io_out_T_3 @[alu.scala 35:14]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<4>("h07"), io.op) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          node _io_out_T_4 = and(io.A, io.B) @[alu.scala 38:22]
          io.out <= _io_out_T_4 @[alu.scala 38:14]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<4>("h06"), io.op) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            node _io_out_T_5 = or(io.A, io.B) @[alu.scala 41:22]
            io.out <= _io_out_T_5 @[alu.scala 41:14]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_4 = eq(UInt<4>("h04"), io.op) @[Conditional.scala 37:30]
            when _T_4 : @[Conditional.scala 39:67]
              node _io_out_T_6 = xor(io.A, io.B) @[alu.scala 44:22]
              io.out <= _io_out_T_6 @[alu.scala 44:14]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_5 = eq(UInt<4>("h02"), io.op) @[Conditional.scala 37:30]
              when _T_5 : @[Conditional.scala 39:67]
                node _T_6 = lt(io.A, io.B) @[alu.scala 47:18]
                when _T_6 : @[alu.scala 47:26]
                  io.out <= UInt<1>("h01") @[alu.scala 48:16]
                  skip @[alu.scala 47:26]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_7 = eq(UInt<4>("h01"), io.op) @[Conditional.scala 37:30]
                when _T_7 : @[Conditional.scala 39:67]
                  node _io_out_T_7 = dshl(io.A, shiftamount) @[alu.scala 52:22]
                  io.out <= _io_out_T_7 @[alu.scala 52:14]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_8 = eq(UInt<4>("h03"), io.op) @[Conditional.scala 37:30]
                  when _T_8 : @[Conditional.scala 39:67]
                    node _T_9 = lt(io.A, io.B) @[alu.scala 58:18]
                    when _T_9 : @[alu.scala 58:25]
                      io.out <= UInt<1>("h01") @[alu.scala 59:16]
                      skip @[alu.scala 58:25]
                    skip @[Conditional.scala 39:67]
                  else : @[Conditional.scala 39:67]
                    node _T_10 = eq(UInt<4>("h05"), io.op) @[Conditional.scala 37:30]
                    when _T_10 : @[Conditional.scala 39:67]
                      node _io_out_T_8 = dshr(io.A, shiftamount) @[alu.scala 66:22]
                      io.out <= _io_out_T_8 @[alu.scala 66:15]
                      skip @[Conditional.scala 39:67]
                    else : @[Conditional.scala 39:67]
                      node _T_11 = eq(UInt<4>("h0d"), io.op) @[Conditional.scala 37:30]
                      when _T_11 : @[Conditional.scala 39:67]
                        node _io_out_T_9 = asSInt(io.A) @[alu.scala 69:17]
                        node _io_out_T_10 = dshr(_io_out_T_9, shiftamount) @[alu.scala 69:23]
                        node _io_out_T_11 = asUInt(_io_out_T_10) @[alu.scala 69:38]
                        io.out <= _io_out_T_11 @[alu.scala 69:9]
                        skip @[Conditional.scala 39:67]
    
  module controlunit : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<32>, func3_7 : UInt<3>, en_imem : UInt<1>, en_reg : UInt<1>, rd : UInt<5>, rs2 : UInt<5>, rs1 : UInt<5>, imm : UInt<12>}
    
    io.en_imem <= UInt<1>("h00") @[controlunit.scala 16:12]
    io.en_reg <= UInt<1>("h00") @[controlunit.scala 17:11]
    io.func3_7 <= UInt<1>("h00") @[controlunit.scala 18:12]
    node _T = bits(io.instruction, 6, 0) @[controlunit.scala 20:20]
    node _T_1 = eq(_T, UInt<6>("h033")) @[controlunit.scala 20:26]
    when _T_1 : @[controlunit.scala 21:1]
      node io_func3_7_hi = bits(io.instruction, 30, 30) @[controlunit.scala 22:35]
      node io_func3_7_lo = bits(io.instruction, 14, 12) @[controlunit.scala 22:54]
      node _io_func3_7_T = cat(io_func3_7_hi, io_func3_7_lo) @[Cat.scala 30:58]
      io.func3_7 <= _io_func3_7_T @[controlunit.scala 22:14]
      io.en_reg <= UInt<1>("h01") @[controlunit.scala 23:13]
      skip @[controlunit.scala 21:1]
    else : @[controlunit.scala 25:1]
      node _T_2 = bits(io.instruction, 6, 0) @[controlunit.scala 24:26]
      node _T_3 = eq(_T_2, UInt<5>("h013")) @[controlunit.scala 24:32]
      when _T_3 : @[controlunit.scala 25:1]
        node _io_func3_7_T_1 = bits(io.instruction, 14, 12) @[controlunit.scala 26:33]
        io.func3_7 <= _io_func3_7_T_1 @[controlunit.scala 26:16]
        node _T_4 = bits(io.instruction, 14, 12) @[controlunit.scala 27:24]
        node _T_5 = eq(_T_4, UInt<3>("h05")) @[controlunit.scala 27:33]
        when _T_5 : @[controlunit.scala 28:5]
          node io_func3_7_hi_1 = bits(io.instruction, 30, 30) @[controlunit.scala 29:39]
          node io_func3_7_lo_1 = bits(io.instruction, 14, 12) @[controlunit.scala 29:58]
          node _io_func3_7_T_2 = cat(io_func3_7_hi_1, io_func3_7_lo_1) @[Cat.scala 30:58]
          io.func3_7 <= _io_func3_7_T_2 @[controlunit.scala 29:18]
          skip @[controlunit.scala 28:5]
        io.en_reg <= UInt<1>("h01") @[controlunit.scala 31:15]
        skip @[controlunit.scala 25:1]
      else : @[controlunit.scala 33:1]
        node _T_6 = bits(io.instruction, 6, 0) @[controlunit.scala 32:26]
        node _T_7 = eq(_T_6, UInt<2>("h03")) @[controlunit.scala 32:32]
        when _T_7 : @[controlunit.scala 33:1]
          node _io_func3_7_T_3 = bits(io.instruction, 14, 12) @[controlunit.scala 34:33]
          io.func3_7 <= _io_func3_7_T_3 @[controlunit.scala 34:16]
          io.en_reg <= UInt<1>("h01") @[controlunit.scala 35:15]
          skip @[controlunit.scala 33:1]
        else : @[controlunit.scala 37:1]
          node _T_8 = bits(io.instruction, 6, 0) @[controlunit.scala 36:26]
          node _T_9 = eq(_T_8, UInt<6>("h023")) @[controlunit.scala 36:32]
          when _T_9 : @[controlunit.scala 37:1]
            node _io_func3_7_T_4 = bits(io.instruction, 14, 12) @[controlunit.scala 38:33]
            io.func3_7 <= _io_func3_7_T_4 @[controlunit.scala 38:16]
            io.en_reg <= UInt<1>("h00") @[controlunit.scala 39:15]
            skip @[controlunit.scala 37:1]
          else : @[controlunit.scala 40:44]
            node _T_10 = bits(io.instruction, 6, 0) @[controlunit.scala 40:26]
            node _T_11 = eq(_T_10, UInt<7>("h06f")) @[controlunit.scala 40:32]
            when _T_11 : @[controlunit.scala 40:44]
              io.en_reg <= UInt<1>("h01") @[controlunit.scala 41:13]
              skip @[controlunit.scala 40:44]
    node _io_rd_T = bits(io.instruction, 11, 7) @[controlunit.scala 44:25]
    io.rd <= _io_rd_T @[controlunit.scala 44:8]
    node _io_rs1_T = bits(io.instruction, 19, 15) @[controlunit.scala 45:26]
    io.rs1 <= _io_rs1_T @[controlunit.scala 45:9]
    node _io_rs2_T = bits(io.instruction, 24, 20) @[controlunit.scala 46:26]
    io.rs2 <= _io_rs2_T @[controlunit.scala 46:9]
    node _io_imm_T = bits(io.instruction, 31, 20) @[controlunit.scala 47:26]
    io.imm <= _io_imm_T @[controlunit.scala 47:9]
    
  module Imem : 
    input clock : Clock
    input reset : Reset
    output io : {flip data_in : UInt<32>, flip enable : UInt<1>, flip address : UInt<32>, out : UInt<32>}
    
    cmem memory : UInt<32>[256] @[Imem.scala 13:17]
    when io.enable : @[Imem.scala 17:20]
      node _T = shr(io.address, 2) @[Imem.scala 18:26]
      node _T_1 = bits(_T, 7, 0)
      write mport MPORT = memory[_T_1], clock
      MPORT <= io.data_in
      skip @[Imem.scala 17:20]
    node _io_out_T = shr(io.address, 2) @[Imem.scala 20:35]
    node _io_out_T_1 = bits(_io_out_T, 7, 0) @[Imem.scala 20:22]
    read mport io_out_MPORT = memory[_io_out_T_1], clock @[Imem.scala 20:22]
    io.out <= io_out_MPORT @[Imem.scala 20:8]
    
  module pc : 
    input clock : Clock
    input reset : Reset
    output io : {flip imm : UInt<32>, out : UInt<32>, flip jump : UInt<1>, flip jump2 : UInt<1>, flip jump3 : UInt<1>, flip rs1data : UInt<32>}
    
    io.out <= UInt<1>("h00") @[pc.scala 16:10]
    reg pc : UInt<32>, clock with : (reset => (reset, UInt<32>("h00"))) @[pc.scala 18:19]
    when io.jump : @[pc.scala 20:14]
      pc <= io.imm @[pc.scala 21:4]
      skip @[pc.scala 20:14]
    else : @[pc.scala 23:11]
      node _pc_T = add(pc, UInt<3>("h04")) @[pc.scala 24:11]
      node _pc_T_1 = tail(_pc_T, 1) @[pc.scala 24:11]
      pc <= _pc_T_1 @[pc.scala 24:4]
      skip @[pc.scala 23:11]
    node _T = eq(pc, UInt<11>("h0400")) @[pc.scala 26:9]
    when _T : @[pc.scala 26:17]
      pc <= UInt<1>("h00") @[pc.scala 27:4]
      skip @[pc.scala 26:17]
    when io.jump2 : @[pc.scala 29:16]
      pc <= io.imm @[pc.scala 31:4]
      skip @[pc.scala 29:16]
    when io.jump3 : @[pc.scala 34:16]
      pc <= io.imm @[pc.scala 35:4]
      skip @[pc.scala 34:16]
    io.out <= pc @[pc.scala 38:8]
    
  module registerfile : 
    input clock : Clock
    input reset : Reset
    output io : {flip raddr1 : UInt<5>, flip raddr2 : UInt<5>, rdata1 : UInt<32>, rdata2 : UInt<32>, flip wen : UInt<1>, flip waddr : UInt<5>, flip wdata : UInt<32>}
    
    reg regs : UInt<32>[32], clock @[registerfile.scala 14:16]
    node _io_rdata1_T = orr(io.raddr1) @[registerfile.scala 15:37]
    node _io_rdata1_T_1 = mux(_io_rdata1_T, regs[io.raddr1], UInt<1>("h00")) @[registerfile.scala 15:20]
    io.rdata1 <= _io_rdata1_T_1 @[registerfile.scala 15:13]
    node _io_rdata2_T = orr(io.raddr2) @[registerfile.scala 16:37]
    node _io_rdata2_T_1 = mux(_io_rdata2_T, regs[io.raddr2], UInt<1>("h00")) @[registerfile.scala 16:20]
    io.rdata2 <= _io_rdata2_T_1 @[registerfile.scala 16:13]
    node _T = orr(io.waddr) @[registerfile.scala 17:32]
    node _T_1 = and(io.wen, _T) @[registerfile.scala 17:17]
    when _T_1 : @[registerfile.scala 17:38]
      regs[io.waddr] <= io.wdata @[registerfile.scala 18:25]
      skip @[registerfile.scala 17:38]
    
  module immgenr : 
    input clock : Clock
    input reset : Reset
    output io : {flip instruction : UInt<32>, imm : UInt<32>}
    
    io.imm <= UInt<1>("h00") @[immgenr.scala 23:10]
    node opcode = bits(io.instruction, 6, 0) @[immgenr.scala 24:30]
    node _T = eq(UInt<5>("h013"), opcode) @[Conditional.scala 37:30]
    when _T : @[Conditional.scala 40:58]
      node _io_imm_T = bits(io.instruction, 31, 31) @[immgenr.scala 27:44]
      node _io_imm_T_1 = bits(_io_imm_T, 0, 0) @[Bitwise.scala 72:15]
      node io_imm_hi = mux(_io_imm_T_1, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
      node io_imm_lo = bits(io.instruction, 31, 20) @[immgenr.scala 27:65]
      node _io_imm_T_2 = cat(io_imm_hi, io_imm_lo) @[Cat.scala 30:58]
      io.imm <= _io_imm_T_2 @[immgenr.scala 27:14]
      skip @[Conditional.scala 40:58]
    else : @[Conditional.scala 39:67]
      node _T_1 = eq(UInt<2>("h03"), opcode) @[Conditional.scala 37:30]
      when _T_1 : @[Conditional.scala 39:67]
        node _io_imm_T_3 = bits(io.instruction, 31, 31) @[immgenr.scala 30:44]
        node _io_imm_T_4 = bits(_io_imm_T_3, 0, 0) @[Bitwise.scala 72:15]
        node io_imm_hi_1 = mux(_io_imm_T_4, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
        node io_imm_lo_1 = bits(io.instruction, 31, 20) @[immgenr.scala 30:65]
        node _io_imm_T_5 = cat(io_imm_hi_1, io_imm_lo_1) @[Cat.scala 30:58]
        io.imm <= _io_imm_T_5 @[immgenr.scala 30:14]
        skip @[Conditional.scala 39:67]
      else : @[Conditional.scala 39:67]
        node _T_2 = eq(UInt<6>("h023"), opcode) @[Conditional.scala 37:30]
        when _T_2 : @[Conditional.scala 39:67]
          node _io_imm_T_6 = bits(io.instruction, 31, 31) @[immgenr.scala 33:44]
          node _io_imm_T_7 = bits(_io_imm_T_6, 0, 0) @[Bitwise.scala 72:15]
          node io_imm_hi_hi = mux(_io_imm_T_7, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
          node io_imm_hi_lo = bits(io.instruction, 31, 25) @[immgenr.scala 33:65]
          node io_imm_lo_2 = bits(io.instruction, 11, 7) @[immgenr.scala 33:89]
          node io_imm_hi_2 = cat(io_imm_hi_hi, io_imm_hi_lo) @[Cat.scala 30:58]
          node _io_imm_T_8 = cat(io_imm_hi_2, io_imm_lo_2) @[Cat.scala 30:58]
          io.imm <= _io_imm_T_8 @[immgenr.scala 33:14]
          skip @[Conditional.scala 39:67]
        else : @[Conditional.scala 39:67]
          node _T_3 = eq(UInt<7>("h063"), opcode) @[Conditional.scala 37:30]
          when _T_3 : @[Conditional.scala 39:67]
            node _io_imm_T_9 = bits(io.instruction, 31, 31) @[immgenr.scala 36:44]
            node _io_imm_T_10 = bits(_io_imm_T_9, 0, 0) @[Bitwise.scala 72:15]
            node io_imm_hi_hi_hi = mux(_io_imm_T_10, UInt<19>("h07ffff"), UInt<19>("h00")) @[Bitwise.scala 72:12]
            node io_imm_hi_hi_lo = bits(io.instruction, 31, 31) @[immgenr.scala 36:65]
            node io_imm_hi_lo_1 = bits(io.instruction, 7, 7) @[immgenr.scala 36:85]
            node io_imm_lo_hi_hi = bits(io.instruction, 30, 25) @[immgenr.scala 36:104]
            node io_imm_lo_hi_lo = bits(io.instruction, 11, 8) @[immgenr.scala 36:127]
            node io_imm_lo_hi = cat(io_imm_lo_hi_hi, io_imm_lo_hi_lo) @[Cat.scala 30:58]
            node io_imm_lo_3 = cat(io_imm_lo_hi, UInt<1>("h00")) @[Cat.scala 30:58]
            node io_imm_hi_hi_1 = cat(io_imm_hi_hi_hi, io_imm_hi_hi_lo) @[Cat.scala 30:58]
            node io_imm_hi_3 = cat(io_imm_hi_hi_1, io_imm_hi_lo_1) @[Cat.scala 30:58]
            node _io_imm_T_11 = cat(io_imm_hi_3, io_imm_lo_3) @[Cat.scala 30:58]
            io.imm <= _io_imm_T_11 @[immgenr.scala 36:14]
            skip @[Conditional.scala 39:67]
          else : @[Conditional.scala 39:67]
            node _T_4 = eq(UInt<6>("h037"), opcode) @[Conditional.scala 37:30]
            when _T_4 : @[Conditional.scala 39:67]
              node io_imm_hi_4 = bits(io.instruction, 31, 12) @[immgenr.scala 40:35]
              node io_imm_lo_4 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
              node _io_imm_T_12 = cat(io_imm_hi_4, io_imm_lo_4) @[Cat.scala 30:58]
              io.imm <= _io_imm_T_12 @[immgenr.scala 40:14]
              skip @[Conditional.scala 39:67]
            else : @[Conditional.scala 39:67]
              node _T_5 = eq(UInt<32>("h017"), opcode) @[Conditional.scala 37:30]
              when _T_5 : @[Conditional.scala 39:67]
                node io_imm_hi_5 = bits(io.instruction, 31, 12) @[immgenr.scala 43:35]
                node io_imm_lo_5 = mux(UInt<1>("h00"), UInt<12>("h0fff"), UInt<12>("h00")) @[Bitwise.scala 72:12]
                node _io_imm_T_13 = cat(io_imm_hi_5, io_imm_lo_5) @[Cat.scala 30:58]
                io.imm <= _io_imm_T_13 @[immgenr.scala 43:14]
                skip @[Conditional.scala 39:67]
              else : @[Conditional.scala 39:67]
                node _T_6 = eq(UInt<32>("h06f"), opcode) @[Conditional.scala 37:30]
                when _T_6 : @[Conditional.scala 39:67]
                  node _io_imm_T_14 = bits(io.instruction, 31, 31) @[immgenr.scala 49:44]
                  node _io_imm_T_15 = bits(_io_imm_T_14, 0, 0) @[Bitwise.scala 72:15]
                  node io_imm_hi_hi_hi_1 = mux(_io_imm_T_15, UInt<11>("h07ff"), UInt<11>("h00")) @[Bitwise.scala 72:12]
                  node io_imm_hi_hi_lo_1 = bits(io.instruction, 31, 31) @[immgenr.scala 49:65]
                  node io_imm_hi_lo_2 = bits(io.instruction, 19, 12) @[immgenr.scala 49:85]
                  node io_imm_lo_hi_hi_1 = bits(io.instruction, 20, 20) @[immgenr.scala 49:109]
                  node io_imm_lo_hi_lo_1 = bits(io.instruction, 30, 21) @[immgenr.scala 49:129]
                  node io_imm_lo_hi_1 = cat(io_imm_lo_hi_hi_1, io_imm_lo_hi_lo_1) @[Cat.scala 30:58]
                  node io_imm_lo_6 = cat(io_imm_lo_hi_1, UInt<1>("h00")) @[Cat.scala 30:58]
                  node io_imm_hi_hi_2 = cat(io_imm_hi_hi_hi_1, io_imm_hi_hi_lo_1) @[Cat.scala 30:58]
                  node io_imm_hi_6 = cat(io_imm_hi_hi_2, io_imm_hi_lo_2) @[Cat.scala 30:58]
                  node _io_imm_T_16 = cat(io_imm_hi_6, io_imm_lo_6) @[Cat.scala 30:58]
                  io.imm <= _io_imm_T_16 @[immgenr.scala 49:14]
                  skip @[Conditional.scala 39:67]
                else : @[Conditional.scala 39:67]
                  node _T_7 = eq(UInt<32>("h067"), opcode) @[Conditional.scala 37:30]
                  when _T_7 : @[Conditional.scala 39:67]
                    node _io_imm_T_17 = bits(io.instruction, 31, 31) @[immgenr.scala 53:44]
                    node _io_imm_T_18 = bits(_io_imm_T_17, 0, 0) @[Bitwise.scala 72:15]
                    node io_imm_hi_7 = mux(_io_imm_T_18, UInt<20>("h0fffff"), UInt<20>("h00")) @[Bitwise.scala 72:12]
                    node io_imm_lo_7 = bits(io.instruction, 31, 20) @[immgenr.scala 53:65]
                    node _io_imm_T_19 = cat(io_imm_hi_7, io_imm_lo_7) @[Cat.scala 30:58]
                    io.imm <= _io_imm_T_19 @[immgenr.scala 53:14]
                    skip @[Conditional.scala 39:67]
    
  module datamemory : 
    input clock : Clock
    input reset : Reset
    output io : {out : UInt<8>[4], flip addr : UInt<8>, flip rd_enable : UInt<1>, flip wr_enable : UInt<1>, flip mask : UInt<1>[4], flip dataIn : UInt<8>[4]}
    
    io.out[0] <= UInt<1>("h00") @[datamemory.scala 14:13]
    io.out[1] <= UInt<1>("h00") @[datamemory.scala 15:13]
    io.out[2] <= UInt<1>("h00") @[datamemory.scala 16:13]
    io.out[3] <= UInt<1>("h00") @[datamemory.scala 17:13]
    cmem memory : UInt<8>[4][256] @[datamemory.scala 20:19]
    when io.wr_enable : @[datamemory.scala 23:22]
      write mport MPORT = memory[io.addr], clock
      when io.mask[0] :
        MPORT[0] <= io.dataIn[0]
        skip
      when io.mask[1] :
        MPORT[1] <= io.dataIn[1]
        skip
      when io.mask[2] :
        MPORT[2] <= io.dataIn[2]
        skip
      when io.mask[3] :
        MPORT[3] <= io.dataIn[3]
        skip
      skip @[datamemory.scala 23:22]
    when io.rd_enable : @[datamemory.scala 26:22]
      read mport MPORT_1 = memory[io.addr], clock @[datamemory.scala 27:26]
      io.out[0] <= MPORT_1[0] @[datamemory.scala 27:12]
      io.out[1] <= MPORT_1[1] @[datamemory.scala 27:12]
      io.out[2] <= MPORT_1[2] @[datamemory.scala 27:12]
      io.out[3] <= MPORT_1[3] @[datamemory.scala 27:12]
      skip @[datamemory.scala 26:22]
    
  module top : 
    input clock : Clock
    input reset : UInt<1>
    output io : {output : UInt<32>}
    
    inst alumod of alu @[top.scala 9:20]
    alumod.clock <= clock
    alumod.reset <= reset
    inst cumod of controlunit @[top.scala 10:19]
    cumod.clock <= clock
    cumod.reset <= reset
    inst inmmod of Imem @[top.scala 11:20]
    inmmod.clock <= clock
    inmmod.reset <= reset
    inst pcmod of pc @[top.scala 12:19]
    pcmod.clock <= clock
    pcmod.reset <= reset
    inst regfmod of registerfile @[top.scala 13:21]
    regfmod.clock <= clock
    regfmod.reset <= reset
    inst immg of immgenr @[top.scala 14:18]
    immg.clock <= clock
    immg.reset <= reset
    inst dmmod of datamemory @[top.scala 15:17]
    dmmod.clock <= clock
    dmmod.reset <= reset
    dmmod.io.dataIn[0] <= UInt<1>("h00") @[top.scala 17:20]
    dmmod.io.dataIn[1] <= UInt<1>("h00") @[top.scala 18:20]
    dmmod.io.dataIn[2] <= UInt<1>("h00") @[top.scala 19:20]
    dmmod.io.dataIn[3] <= UInt<1>("h00") @[top.scala 20:20]
    dmmod.io.mask[0] <= UInt<1>("h00") @[top.scala 22:18]
    dmmod.io.mask[1] <= UInt<1>("h00") @[top.scala 23:18]
    dmmod.io.mask[2] <= UInt<1>("h00") @[top.scala 24:18]
    dmmod.io.mask[3] <= UInt<1>("h00") @[top.scala 25:18]
    inmmod.io.data_in <= UInt<1>("h00") @[top.scala 27:18]
    dmmod.io.wr_enable <= UInt<1>("h00") @[top.scala 28:19]
    dmmod.io.addr <= UInt<1>("h00") @[top.scala 29:14]
    dmmod.io.rd_enable <= UInt<1>("h00") @[top.scala 30:19]
    io.output <= UInt<1>("h00") @[top.scala 31:10]
    pcmod.io.jump <= UInt<1>("h00") @[top.scala 32:15]
    pcmod.io.jump2 <= UInt<1>("h00") @[top.scala 33:16]
    pcmod.io.jump3 <= UInt<1>("h00") @[top.scala 34:16]
    pcmod.io.imm <= UInt<1>("h00") @[top.scala 35:14]
    inmmod.io.enable <= cumod.io.en_imem @[top.scala 37:18]
    inmmod.io.address <= pcmod.io.out @[top.scala 38:18]
    cumod.io.instruction <= inmmod.io.out @[top.scala 39:22]
    immg.io.instruction <= inmmod.io.out @[top.scala 40:21]
    regfmod.io.raddr1 <= cumod.io.rs1 @[top.scala 41:19]
    regfmod.io.raddr2 <= cumod.io.rs2 @[top.scala 42:19]
    regfmod.io.waddr <= cumod.io.rd @[top.scala 43:18]
    alumod.io.op <= cumod.io.func3_7 @[top.scala 44:14]
    pcmod.io.rs1data <= regfmod.io.rdata1 @[top.scala 45:18]
    alumod.io.A <= regfmod.io.rdata1 @[top.scala 47:13]
    alumod.io.B <= regfmod.io.rdata2 @[top.scala 48:13]
    regfmod.io.wen <= cumod.io.en_reg @[top.scala 50:16]
    node _T = bits(cumod.io.instruction, 6, 0) @[top.scala 51:26]
    node _T_1 = eq(_T, UInt<6>("h033")) @[top.scala 51:32]
    when _T_1 : @[top.scala 51:45]
      alumod.io.B <= regfmod.io.rdata2 @[top.scala 53:13]
      skip @[top.scala 51:45]
    else : @[top.scala 55:49]
      node _T_2 = bits(cumod.io.instruction, 6, 0) @[top.scala 55:31]
      node _T_3 = eq(_T_2, UInt<5>("h013")) @[top.scala 55:37]
      when _T_3 : @[top.scala 55:49]
        alumod.io.B <= immg.io.imm @[top.scala 56:13]
        skip @[top.scala 55:49]
    dmmod.io.wr_enable <= UInt<1>("h00") @[top.scala 59:20]
    node _T_4 = bits(cumod.io.instruction, 6, 0) @[top.scala 61:26]
    node _T_5 = eq(_T_4, UInt<6>("h023")) @[top.scala 61:32]
    when _T_5 : @[top.scala 61:45]
      alumod.io.op <= UInt<1>("h00") @[top.scala 62:15]
      alumod.io.A <= regfmod.io.rdata1 @[top.scala 63:15]
      alumod.io.B <= immg.io.imm @[top.scala 64:15]
      dmmod.io.wr_enable <= UInt<1>("h01") @[top.scala 65:22]
      node _dmmod_io_addr_T = bits(alumod.io.out, 9, 2) @[top.scala 67:33]
      dmmod.io.addr <= _dmmod_io_addr_T @[top.scala 67:17]
      node masksel = bits(alumod.io.out, 1, 0) @[top.scala 69:30]
      node _T_6 = bits(cumod.io.instruction, 14, 12) @[top.scala 71:28]
      node _T_7 = eq(_T_6, UInt<1>("h00")) @[top.scala 71:36]
      when _T_7 : @[top.scala 71:44]
        node _T_8 = eq(masksel, UInt<1>("h00")) @[top.scala 73:18]
        when _T_8 : @[top.scala 74:7]
          dmmod.io.mask[0] <= UInt<1>("h01") @[top.scala 75:26]
          dmmod.io.mask[1] <= UInt<1>("h00") @[top.scala 76:26]
          dmmod.io.mask[2] <= UInt<1>("h00") @[top.scala 77:26]
          dmmod.io.mask[3] <= UInt<1>("h00") @[top.scala 78:26]
          node _dmmod_io_dataIn_0_T = bits(regfmod.io.rdata2, 7, 0) @[top.scala 80:48]
          dmmod.io.dataIn[0] <= _dmmod_io_dataIn_0_T @[top.scala 80:28]
          skip @[top.scala 74:7]
        else : @[top.scala 87:7]
          node _T_9 = eq(masksel, UInt<1>("h01")) @[top.scala 86:25]
          when _T_9 : @[top.scala 87:7]
            dmmod.io.mask[0] <= UInt<1>("h00") @[top.scala 88:26]
            dmmod.io.mask[1] <= UInt<1>("h01") @[top.scala 89:26]
            dmmod.io.mask[2] <= UInt<1>("h00") @[top.scala 90:26]
            dmmod.io.mask[3] <= UInt<1>("h00") @[top.scala 91:26]
            node _dmmod_io_dataIn_1_T = bits(regfmod.io.rdata2, 7, 0) @[top.scala 94:48]
            dmmod.io.dataIn[1] <= _dmmod_io_dataIn_1_T @[top.scala 94:28]
            skip @[top.scala 87:7]
          else : @[top.scala 100:7]
            node _T_10 = eq(masksel, UInt<2>("h02")) @[top.scala 99:25]
            when _T_10 : @[top.scala 100:7]
              dmmod.io.mask[0] <= UInt<1>("h00") @[top.scala 101:26]
              dmmod.io.mask[1] <= UInt<1>("h00") @[top.scala 102:26]
              dmmod.io.mask[2] <= UInt<1>("h01") @[top.scala 103:26]
              dmmod.io.mask[3] <= UInt<1>("h00") @[top.scala 104:26]
              node _dmmod_io_dataIn_2_T = bits(regfmod.io.rdata2, 7, 0) @[top.scala 108:48]
              dmmod.io.dataIn[2] <= _dmmod_io_dataIn_2_T @[top.scala 108:28]
              skip @[top.scala 100:7]
            else : @[top.scala 113:7]
              node _T_11 = eq(masksel, UInt<2>("h03")) @[top.scala 112:25]
              when _T_11 : @[top.scala 113:7]
                dmmod.io.mask[0] <= UInt<1>("h00") @[top.scala 114:26]
                dmmod.io.mask[1] <= UInt<1>("h00") @[top.scala 115:26]
                dmmod.io.mask[2] <= UInt<1>("h00") @[top.scala 116:26]
                dmmod.io.mask[3] <= UInt<1>("h01") @[top.scala 117:26]
                node _dmmod_io_dataIn_3_T = bits(regfmod.io.rdata2, 7, 0) @[top.scala 122:48]
                dmmod.io.dataIn[3] <= _dmmod_io_dataIn_3_T @[top.scala 122:28]
                skip @[top.scala 113:7]
        skip @[top.scala 71:44]
      else : @[top.scala 127:50]
        node _T_12 = bits(cumod.io.instruction, 14, 12) @[top.scala 127:34]
        node _T_13 = eq(_T_12, UInt<1>("h01")) @[top.scala 127:42]
        when _T_13 : @[top.scala 127:50]
          node _T_14 = eq(masksel, UInt<1>("h00")) @[top.scala 129:16]
          when _T_14 : @[top.scala 130:7]
            dmmod.io.mask[0] <= UInt<1>("h01") @[top.scala 131:26]
            dmmod.io.mask[1] <= UInt<1>("h01") @[top.scala 132:26]
            dmmod.io.mask[2] <= UInt<1>("h00") @[top.scala 133:26]
            dmmod.io.mask[3] <= UInt<1>("h00") @[top.scala 134:26]
            node _dmmod_io_dataIn_0_T_1 = bits(regfmod.io.rdata2, 7, 0) @[top.scala 136:48]
            dmmod.io.dataIn[0] <= _dmmod_io_dataIn_0_T_1 @[top.scala 136:28]
            node _dmmod_io_dataIn_1_T_1 = bits(regfmod.io.rdata2, 15, 8) @[top.scala 137:48]
            dmmod.io.dataIn[1] <= _dmmod_io_dataIn_1_T_1 @[top.scala 137:28]
            skip @[top.scala 130:7]
          node _T_15 = eq(masksel, UInt<1>("h01")) @[top.scala 144:16]
          when _T_15 : @[top.scala 145:7]
            dmmod.io.mask[0] <= UInt<1>("h00") @[top.scala 146:26]
            dmmod.io.mask[1] <= UInt<1>("h01") @[top.scala 147:26]
            dmmod.io.mask[2] <= UInt<1>("h01") @[top.scala 148:26]
            dmmod.io.mask[3] <= UInt<1>("h00") @[top.scala 149:26]
            node _dmmod_io_dataIn_1_T_2 = bits(regfmod.io.rdata2, 7, 0) @[top.scala 152:48]
            dmmod.io.dataIn[1] <= _dmmod_io_dataIn_1_T_2 @[top.scala 152:28]
            node _dmmod_io_dataIn_2_T_1 = bits(regfmod.io.rdata2, 15, 8) @[top.scala 153:48]
            dmmod.io.dataIn[2] <= _dmmod_io_dataIn_2_T_1 @[top.scala 153:28]
            skip @[top.scala 145:7]
          node _T_16 = eq(masksel, UInt<2>("h02")) @[top.scala 158:15]
          when _T_16 : @[top.scala 159:7]
            dmmod.io.mask[0] <= UInt<1>("h00") @[top.scala 160:26]
            dmmod.io.mask[1] <= UInt<1>("h00") @[top.scala 161:26]
            dmmod.io.mask[2] <= UInt<1>("h01") @[top.scala 162:26]
            dmmod.io.mask[3] <= UInt<1>("h01") @[top.scala 163:26]
            node _dmmod_io_dataIn_2_T_2 = bits(regfmod.io.rdata2, 7, 0) @[top.scala 167:48]
            dmmod.io.dataIn[2] <= _dmmod_io_dataIn_2_T_2 @[top.scala 167:28]
            node _dmmod_io_dataIn_3_T_1 = bits(regfmod.io.rdata2, 15, 8) @[top.scala 168:48]
            dmmod.io.dataIn[3] <= _dmmod_io_dataIn_3_T_1 @[top.scala 168:28]
            skip @[top.scala 159:7]
          node _T_17 = eq(masksel, UInt<2>("h03")) @[top.scala 172:21]
          when _T_17 : @[top.scala 173:7]
            dmmod.io.mask[0] <= UInt<1>("h01") @[top.scala 174:26]
            dmmod.io.mask[1] <= UInt<1>("h00") @[top.scala 175:26]
            dmmod.io.mask[2] <= UInt<1>("h00") @[top.scala 176:26]
            dmmod.io.mask[3] <= UInt<1>("h01") @[top.scala 177:26]
            node _dmmod_io_dataIn_0_T_2 = bits(regfmod.io.rdata2, 15, 8) @[top.scala 179:48]
            dmmod.io.dataIn[0] <= _dmmod_io_dataIn_0_T_2 @[top.scala 179:28]
            node _dmmod_io_dataIn_3_T_2 = bits(regfmod.io.rdata2, 7, 0) @[top.scala 182:48]
            dmmod.io.dataIn[3] <= _dmmod_io_dataIn_3_T_2 @[top.scala 182:28]
            skip @[top.scala 173:7]
          skip @[top.scala 127:50]
        else : @[top.scala 186:50]
          node _T_18 = bits(cumod.io.instruction, 14, 12) @[top.scala 186:34]
          node _T_19 = eq(_T_18, UInt<2>("h02")) @[top.scala 186:42]
          when _T_19 : @[top.scala 186:50]
            dmmod.io.mask[0] <= UInt<1>("h01") @[top.scala 190:26]
            dmmod.io.mask[1] <= UInt<1>("h01") @[top.scala 191:26]
            dmmod.io.mask[2] <= UInt<1>("h01") @[top.scala 192:26]
            dmmod.io.mask[3] <= UInt<1>("h01") @[top.scala 193:26]
            node _dmmod_io_dataIn_0_T_3 = bits(regfmod.io.rdata2, 7, 0) @[top.scala 195:48]
            dmmod.io.dataIn[0] <= _dmmod_io_dataIn_0_T_3 @[top.scala 195:28]
            node _dmmod_io_dataIn_1_T_3 = bits(regfmod.io.rdata2, 15, 8) @[top.scala 196:48]
            dmmod.io.dataIn[1] <= _dmmod_io_dataIn_1_T_3 @[top.scala 196:28]
            node _dmmod_io_dataIn_2_T_3 = bits(regfmod.io.rdata2, 23, 16) @[top.scala 197:48]
            dmmod.io.dataIn[2] <= _dmmod_io_dataIn_2_T_3 @[top.scala 197:28]
            node _dmmod_io_dataIn_3_T_3 = bits(regfmod.io.rdata2, 31, 24) @[top.scala 198:48]
            dmmod.io.dataIn[3] <= _dmmod_io_dataIn_3_T_3 @[top.scala 198:28]
            skip @[top.scala 186:50]
      skip @[top.scala 61:45]
    regfmod.io.wdata <= alumod.io.out @[top.scala 205:18]
    io.output <= regfmod.io.wdata @[top.scala 206:11]
    node _T_20 = bits(cumod.io.instruction, 6, 0) @[top.scala 209:26]
    node _T_21 = eq(_T_20, UInt<2>("h03")) @[top.scala 209:32]
    when _T_21 : @[top.scala 209:44]
      alumod.io.op <= UInt<1>("h00") @[top.scala 210:15]
      alumod.io.A <= regfmod.io.rdata1 @[top.scala 212:15]
      alumod.io.B <= immg.io.imm @[top.scala 213:15]
      node _dmmod_io_addr_T_1 = bits(alumod.io.out, 9, 2) @[top.scala 215:33]
      dmmod.io.addr <= _dmmod_io_addr_T_1 @[top.scala 215:17]
      dmmod.io.rd_enable <= UInt<1>("h01") @[top.scala 216:22]
      node masksel_1 = bits(alumod.io.out, 1, 0) @[top.scala 217:34]
      node _T_22 = bits(cumod.io.instruction, 14, 12) @[top.scala 219:30]
      node _T_23 = eq(_T_22, UInt<1>("h00")) @[top.scala 219:38]
      when _T_23 : @[top.scala 219:52]
        node _T_24 = eq(masksel_1, UInt<1>("h00")) @[top.scala 222:17]
        when _T_24 : @[top.scala 222:25]
          node _regfmod_io_wdata_T = bits(dmmod.io.out[0], 7, 7) @[top.scala 223:56]
          node _regfmod_io_wdata_T_1 = bits(_regfmod_io_wdata_T, 0, 0) @[Bitwise.scala 72:15]
          node regfmod_io_wdata_hi = mux(_regfmod_io_wdata_T_1, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
          node _regfmod_io_wdata_T_2 = cat(regfmod_io_wdata_hi, dmmod.io.out[0]) @[Cat.scala 30:58]
          regfmod.io.wdata <= _regfmod_io_wdata_T_2 @[top.scala 223:24]
          skip @[top.scala 222:25]
        else : @[top.scala 224:32]
          node _T_25 = eq(masksel_1, UInt<1>("h01")) @[top.scala 224:24]
          when _T_25 : @[top.scala 224:32]
            node _regfmod_io_wdata_T_3 = bits(dmmod.io.out[1], 7, 7) @[top.scala 225:56]
            node _regfmod_io_wdata_T_4 = bits(_regfmod_io_wdata_T_3, 0, 0) @[Bitwise.scala 72:15]
            node regfmod_io_wdata_hi_1 = mux(_regfmod_io_wdata_T_4, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
            node _regfmod_io_wdata_T_5 = cat(regfmod_io_wdata_hi_1, dmmod.io.out[1]) @[Cat.scala 30:58]
            regfmod.io.wdata <= _regfmod_io_wdata_T_5 @[top.scala 225:24]
            skip @[top.scala 224:32]
          else : @[top.scala 226:32]
            node _T_26 = eq(masksel_1, UInt<2>("h02")) @[top.scala 226:24]
            when _T_26 : @[top.scala 226:32]
              node _regfmod_io_wdata_T_6 = bits(dmmod.io.out[2], 7, 7) @[top.scala 227:56]
              node _regfmod_io_wdata_T_7 = bits(_regfmod_io_wdata_T_6, 0, 0) @[Bitwise.scala 72:15]
              node regfmod_io_wdata_hi_2 = mux(_regfmod_io_wdata_T_7, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
              node _regfmod_io_wdata_T_8 = cat(regfmod_io_wdata_hi_2, dmmod.io.out[2]) @[Cat.scala 30:58]
              regfmod.io.wdata <= _regfmod_io_wdata_T_8 @[top.scala 227:24]
              skip @[top.scala 226:32]
            else : @[top.scala 228:32]
              node _T_27 = eq(masksel_1, UInt<2>("h03")) @[top.scala 228:24]
              when _T_27 : @[top.scala 228:32]
                node _regfmod_io_wdata_T_9 = bits(dmmod.io.out[3], 7, 7) @[top.scala 229:56]
                node _regfmod_io_wdata_T_10 = bits(_regfmod_io_wdata_T_9, 0, 0) @[Bitwise.scala 72:15]
                node regfmod_io_wdata_hi_3 = mux(_regfmod_io_wdata_T_10, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
                node _regfmod_io_wdata_T_11 = cat(regfmod_io_wdata_hi_3, dmmod.io.out[3]) @[Cat.scala 30:58]
                regfmod.io.wdata <= _regfmod_io_wdata_T_11 @[top.scala 229:24]
                skip @[top.scala 228:32]
        skip @[top.scala 219:52]
      else : @[top.scala 232:58]
        node _T_28 = bits(cumod.io.instruction, 14, 12) @[top.scala 232:36]
        node _T_29 = eq(_T_28, UInt<1>("h01")) @[top.scala 232:44]
        when _T_29 : @[top.scala 232:58]
          node _T_30 = eq(masksel_1, UInt<1>("h00")) @[top.scala 234:20]
          when _T_30 : @[top.scala 234:28]
            node _regfmod_io_wdata_T_12 = bits(dmmod.io.out[1], 7, 7) @[top.scala 235:56]
            node _regfmod_io_wdata_T_13 = bits(_regfmod_io_wdata_T_12, 0, 0) @[Bitwise.scala 72:15]
            node regfmod_io_wdata_hi_hi = mux(_regfmod_io_wdata_T_13, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
            node regfmod_io_wdata_hi_4 = cat(regfmod_io_wdata_hi_hi, dmmod.io.out[1]) @[Cat.scala 30:58]
            node _regfmod_io_wdata_T_14 = cat(regfmod_io_wdata_hi_4, dmmod.io.out[0]) @[Cat.scala 30:58]
            regfmod.io.wdata <= _regfmod_io_wdata_T_14 @[top.scala 235:24]
            skip @[top.scala 234:28]
          else : @[top.scala 236:32]
            node _T_31 = eq(masksel_1, UInt<1>("h01")) @[top.scala 236:24]
            when _T_31 : @[top.scala 236:32]
              node _regfmod_io_wdata_T_15 = bits(dmmod.io.out[2], 7, 7) @[top.scala 237:56]
              node _regfmod_io_wdata_T_16 = bits(_regfmod_io_wdata_T_15, 0, 0) @[Bitwise.scala 72:15]
              node regfmod_io_wdata_hi_hi_1 = mux(_regfmod_io_wdata_T_16, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
              node regfmod_io_wdata_hi_5 = cat(regfmod_io_wdata_hi_hi_1, dmmod.io.out[2]) @[Cat.scala 30:58]
              node _regfmod_io_wdata_T_17 = cat(regfmod_io_wdata_hi_5, dmmod.io.out[1]) @[Cat.scala 30:58]
              regfmod.io.wdata <= _regfmod_io_wdata_T_17 @[top.scala 237:24]
              skip @[top.scala 236:32]
            else : @[top.scala 238:32]
              node _T_32 = eq(masksel_1, UInt<2>("h02")) @[top.scala 238:24]
              when _T_32 : @[top.scala 238:32]
                node _regfmod_io_wdata_T_18 = bits(dmmod.io.out[3], 7, 7) @[top.scala 239:56]
                node _regfmod_io_wdata_T_19 = bits(_regfmod_io_wdata_T_18, 0, 0) @[Bitwise.scala 72:15]
                node regfmod_io_wdata_hi_hi_2 = mux(_regfmod_io_wdata_T_19, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                node regfmod_io_wdata_hi_6 = cat(regfmod_io_wdata_hi_hi_2, dmmod.io.out[3]) @[Cat.scala 30:58]
                node _regfmod_io_wdata_T_20 = cat(regfmod_io_wdata_hi_6, dmmod.io.out[2]) @[Cat.scala 30:58]
                regfmod.io.wdata <= _regfmod_io_wdata_T_20 @[top.scala 239:24]
                skip @[top.scala 238:32]
              else : @[top.scala 240:32]
                node _T_33 = eq(masksel_1, UInt<2>("h03")) @[top.scala 240:24]
                when _T_33 : @[top.scala 240:32]
                  node _regfmod_io_wdata_T_21 = bits(dmmod.io.out[0], 7, 7) @[top.scala 241:56]
                  node _regfmod_io_wdata_T_22 = bits(_regfmod_io_wdata_T_21, 0, 0) @[Bitwise.scala 72:15]
                  node regfmod_io_wdata_hi_hi_3 = mux(_regfmod_io_wdata_T_22, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                  node regfmod_io_wdata_hi_7 = cat(regfmod_io_wdata_hi_hi_3, dmmod.io.out[0]) @[Cat.scala 30:58]
                  node _regfmod_io_wdata_T_23 = cat(regfmod_io_wdata_hi_7, dmmod.io.out[3]) @[Cat.scala 30:58]
                  regfmod.io.wdata <= _regfmod_io_wdata_T_23 @[top.scala 241:24]
                  skip @[top.scala 240:32]
          skip @[top.scala 232:58]
        else : @[top.scala 246:58]
          node _T_34 = bits(cumod.io.instruction, 14, 12) @[top.scala 246:36]
          node _T_35 = eq(_T_34, UInt<2>("h02")) @[top.scala 246:44]
          when _T_35 : @[top.scala 246:58]
            node regfmod_io_wdata_lo = cat(dmmod.io.out[1], dmmod.io.out[0]) @[Cat.scala 30:58]
            node regfmod_io_wdata_hi_8 = cat(dmmod.io.out[3], dmmod.io.out[2]) @[Cat.scala 30:58]
            node _regfmod_io_wdata_T_24 = cat(regfmod_io_wdata_hi_8, regfmod_io_wdata_lo) @[Cat.scala 30:58]
            regfmod.io.wdata <= _regfmod_io_wdata_T_24 @[top.scala 247:24]
            skip @[top.scala 246:58]
          else : @[top.scala 250:58]
            node _T_36 = bits(cumod.io.instruction, 14, 12) @[top.scala 250:36]
            node _T_37 = eq(_T_36, UInt<3>("h04")) @[top.scala 250:44]
            when _T_37 : @[top.scala 250:58]
              node _T_38 = eq(masksel_1, UInt<1>("h00")) @[top.scala 252:19]
              when _T_38 : @[top.scala 252:27]
                node _regfmod_io_wdata_T_25 = bits(dmmod.io.out[0], 7, 7) @[top.scala 253:56]
                node _regfmod_io_wdata_T_26 = bits(_regfmod_io_wdata_T_25, 0, 0) @[Bitwise.scala 72:15]
                node regfmod_io_wdata_hi_9 = mux(_regfmod_io_wdata_T_26, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
                node _regfmod_io_wdata_T_27 = cat(regfmod_io_wdata_hi_9, dmmod.io.out[0]) @[Cat.scala 30:58]
                regfmod.io.wdata <= _regfmod_io_wdata_T_27 @[top.scala 253:24]
                skip @[top.scala 252:27]
              else : @[top.scala 254:32]
                node _T_39 = eq(masksel_1, UInt<1>("h01")) @[top.scala 254:24]
                when _T_39 : @[top.scala 254:32]
                  node _regfmod_io_wdata_T_28 = bits(dmmod.io.out[1], 7, 7) @[top.scala 255:56]
                  node _regfmod_io_wdata_T_29 = bits(_regfmod_io_wdata_T_28, 0, 0) @[Bitwise.scala 72:15]
                  node regfmod_io_wdata_hi_10 = mux(_regfmod_io_wdata_T_29, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
                  node _regfmod_io_wdata_T_30 = cat(regfmod_io_wdata_hi_10, dmmod.io.out[1]) @[Cat.scala 30:58]
                  regfmod.io.wdata <= _regfmod_io_wdata_T_30 @[top.scala 255:24]
                  skip @[top.scala 254:32]
                else : @[top.scala 256:32]
                  node _T_40 = eq(masksel_1, UInt<2>("h02")) @[top.scala 256:24]
                  when _T_40 : @[top.scala 256:32]
                    node _regfmod_io_wdata_T_31 = bits(dmmod.io.out[2], 7, 7) @[top.scala 257:56]
                    node _regfmod_io_wdata_T_32 = bits(_regfmod_io_wdata_T_31, 0, 0) @[Bitwise.scala 72:15]
                    node regfmod_io_wdata_hi_11 = mux(_regfmod_io_wdata_T_32, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
                    node _regfmod_io_wdata_T_33 = cat(regfmod_io_wdata_hi_11, dmmod.io.out[2]) @[Cat.scala 30:58]
                    regfmod.io.wdata <= _regfmod_io_wdata_T_33 @[top.scala 257:24]
                    skip @[top.scala 256:32]
                  else : @[top.scala 258:32]
                    node _T_41 = eq(masksel_1, UInt<2>("h03")) @[top.scala 258:24]
                    when _T_41 : @[top.scala 258:32]
                      node _regfmod_io_wdata_T_34 = bits(dmmod.io.out[3], 7, 7) @[top.scala 259:56]
                      node _regfmod_io_wdata_T_35 = bits(_regfmod_io_wdata_T_34, 0, 0) @[Bitwise.scala 72:15]
                      node regfmod_io_wdata_hi_12 = mux(_regfmod_io_wdata_T_35, UInt<24>("h0ffffff"), UInt<24>("h00")) @[Bitwise.scala 72:12]
                      node _regfmod_io_wdata_T_36 = cat(regfmod_io_wdata_hi_12, dmmod.io.out[3]) @[Cat.scala 30:58]
                      regfmod.io.wdata <= _regfmod_io_wdata_T_36 @[top.scala 259:24]
                      skip @[top.scala 258:32]
              skip @[top.scala 250:58]
            else : @[top.scala 263:58]
              node _T_42 = bits(cumod.io.instruction, 14, 12) @[top.scala 263:36]
              node _T_43 = eq(_T_42, UInt<3>("h05")) @[top.scala 263:44]
              when _T_43 : @[top.scala 263:58]
                node _T_44 = eq(masksel_1, UInt<1>("h00")) @[top.scala 265:19]
                when _T_44 : @[top.scala 265:27]
                  node _regfmod_io_wdata_T_37 = bits(dmmod.io.out[1], 7, 7) @[top.scala 266:56]
                  node _regfmod_io_wdata_T_38 = bits(_regfmod_io_wdata_T_37, 0, 0) @[Bitwise.scala 72:15]
                  node regfmod_io_wdata_hi_hi_4 = mux(_regfmod_io_wdata_T_38, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                  node regfmod_io_wdata_hi_13 = cat(regfmod_io_wdata_hi_hi_4, dmmod.io.out[1]) @[Cat.scala 30:58]
                  node _regfmod_io_wdata_T_39 = cat(regfmod_io_wdata_hi_13, dmmod.io.out[0]) @[Cat.scala 30:58]
                  regfmod.io.wdata <= _regfmod_io_wdata_T_39 @[top.scala 266:24]
                  skip @[top.scala 265:27]
                else : @[top.scala 267:32]
                  node _T_45 = eq(masksel_1, UInt<1>("h01")) @[top.scala 267:24]
                  when _T_45 : @[top.scala 267:32]
                    node _regfmod_io_wdata_T_40 = bits(dmmod.io.out[2], 7, 7) @[top.scala 268:56]
                    node _regfmod_io_wdata_T_41 = bits(_regfmod_io_wdata_T_40, 0, 0) @[Bitwise.scala 72:15]
                    node regfmod_io_wdata_hi_hi_5 = mux(_regfmod_io_wdata_T_41, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                    node regfmod_io_wdata_hi_14 = cat(regfmod_io_wdata_hi_hi_5, dmmod.io.out[2]) @[Cat.scala 30:58]
                    node _regfmod_io_wdata_T_42 = cat(regfmod_io_wdata_hi_14, dmmod.io.out[1]) @[Cat.scala 30:58]
                    regfmod.io.wdata <= _regfmod_io_wdata_T_42 @[top.scala 268:24]
                    skip @[top.scala 267:32]
                  else : @[top.scala 269:32]
                    node _T_46 = eq(masksel_1, UInt<2>("h02")) @[top.scala 269:24]
                    when _T_46 : @[top.scala 269:32]
                      node _regfmod_io_wdata_T_43 = bits(dmmod.io.out[3], 7, 7) @[top.scala 270:56]
                      node _regfmod_io_wdata_T_44 = bits(_regfmod_io_wdata_T_43, 0, 0) @[Bitwise.scala 72:15]
                      node regfmod_io_wdata_hi_hi_6 = mux(_regfmod_io_wdata_T_44, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                      node regfmod_io_wdata_hi_15 = cat(regfmod_io_wdata_hi_hi_6, dmmod.io.out[3]) @[Cat.scala 30:58]
                      node _regfmod_io_wdata_T_45 = cat(regfmod_io_wdata_hi_15, dmmod.io.out[2]) @[Cat.scala 30:58]
                      regfmod.io.wdata <= _regfmod_io_wdata_T_45 @[top.scala 270:24]
                      skip @[top.scala 269:32]
                    else : @[top.scala 271:32]
                      node _T_47 = eq(masksel_1, UInt<2>("h03")) @[top.scala 271:24]
                      when _T_47 : @[top.scala 271:32]
                        node _regfmod_io_wdata_T_46 = bits(dmmod.io.out[0], 7, 7) @[top.scala 272:56]
                        node _regfmod_io_wdata_T_47 = bits(_regfmod_io_wdata_T_46, 0, 0) @[Bitwise.scala 72:15]
                        node regfmod_io_wdata_hi_hi_7 = mux(_regfmod_io_wdata_T_47, UInt<16>("h0ffff"), UInt<16>("h00")) @[Bitwise.scala 72:12]
                        node regfmod_io_wdata_hi_16 = cat(regfmod_io_wdata_hi_hi_7, dmmod.io.out[0]) @[Cat.scala 30:58]
                        node _regfmod_io_wdata_T_48 = cat(regfmod_io_wdata_hi_16, dmmod.io.out[3]) @[Cat.scala 30:58]
                        regfmod.io.wdata <= _regfmod_io_wdata_T_48 @[top.scala 272:24]
                        skip @[top.scala 271:32]
                skip @[top.scala 263:58]
      skip @[top.scala 209:44]
    node _T_48 = bits(cumod.io.instruction, 6, 0) @[top.scala 281:26]
    node _T_49 = eq(_T_48, UInt<7>("h063")) @[top.scala 281:33]
    when _T_49 : @[top.scala 281:43]
      alumod.io.op <= UInt<1>("h00") @[top.scala 282:15]
      alumod.io.A <= pcmod.io.out @[top.scala 283:15]
      alumod.io.B <= immg.io.imm @[top.scala 284:15]
      dmmod.io.wr_enable <= UInt<1>("h01") @[top.scala 285:22]
      node _dmmod_io_addr_T_2 = bits(alumod.io.out, 9, 2) @[top.scala 287:33]
      dmmod.io.addr <= _dmmod_io_addr_T_2 @[top.scala 287:17]
      pcmod.io.imm <= alumod.io.out @[top.scala 289:18]
      node _T_50 = bits(cumod.io.instruction, 14, 12) @[top.scala 290:30]
      node _T_51 = eq(_T_50, UInt<1>("h00")) @[top.scala 290:39]
      when _T_51 : @[top.scala 290:48]
        node _T_52 = eq(regfmod.io.rdata1, regfmod.io.rdata2) @[top.scala 291:30]
        when _T_52 : @[top.scala 291:53]
          pcmod.io.jump <= UInt<1>("h01") @[top.scala 292:23]
          skip @[top.scala 291:53]
        skip @[top.scala 290:48]
      else : @[top.scala 294:54]
        node _T_53 = bits(cumod.io.instruction, 14, 12) @[top.scala 294:36]
        node _T_54 = eq(_T_53, UInt<1>("h01")) @[top.scala 294:45]
        when _T_54 : @[top.scala 294:54]
          node _T_55 = neq(regfmod.io.rdata1, regfmod.io.rdata2) @[top.scala 295:30]
          when _T_55 : @[top.scala 295:53]
            pcmod.io.jump <= UInt<1>("h01") @[top.scala 296:23]
            skip @[top.scala 295:53]
          skip @[top.scala 294:54]
        else : @[top.scala 298:54]
          node _T_56 = bits(cumod.io.instruction, 14, 12) @[top.scala 298:36]
          node _T_57 = eq(_T_56, UInt<2>("h02")) @[top.scala 298:45]
          when _T_57 : @[top.scala 298:54]
            node _T_58 = lt(regfmod.io.rdata1, regfmod.io.rdata2) @[top.scala 299:30]
            when _T_58 : @[top.scala 299:51]
              pcmod.io.jump <= UInt<1>("h01") @[top.scala 300:23]
              skip @[top.scala 299:51]
            skip @[top.scala 298:54]
          else : @[top.scala 302:54]
            node _T_59 = bits(cumod.io.instruction, 14, 12) @[top.scala 302:36]
            node _T_60 = eq(_T_59, UInt<2>("h03")) @[top.scala 302:45]
            when _T_60 : @[top.scala 302:54]
              node _T_61 = geq(regfmod.io.rdata1, regfmod.io.rdata2) @[top.scala 303:30]
              when _T_61 : @[top.scala 303:52]
                pcmod.io.jump <= UInt<1>("h01") @[top.scala 304:23]
                skip @[top.scala 303:52]
              skip @[top.scala 302:54]
            else : @[top.scala 306:54]
              node _T_62 = bits(cumod.io.instruction, 14, 12) @[top.scala 306:36]
              node _T_63 = eq(_T_62, UInt<3>("h04")) @[top.scala 306:45]
              when _T_63 : @[top.scala 306:54]
                node _T_64 = lt(regfmod.io.rdata1, regfmod.io.rdata2) @[top.scala 307:37]
                when _T_64 : @[top.scala 307:67]
                  pcmod.io.jump <= UInt<1>("h01") @[top.scala 308:23]
                  skip @[top.scala 307:67]
                skip @[top.scala 306:54]
              else : @[top.scala 310:54]
                node _T_65 = bits(cumod.io.instruction, 14, 12) @[top.scala 310:36]
                node _T_66 = eq(_T_65, UInt<3>("h05")) @[top.scala 310:45]
                when _T_66 : @[top.scala 310:54]
                  node _T_67 = geq(regfmod.io.rdata1, regfmod.io.rdata2) @[top.scala 311:37]
                  when _T_67 : @[top.scala 311:68]
                    pcmod.io.jump <= UInt<1>("h01") @[top.scala 312:23]
                    skip @[top.scala 311:68]
                  skip @[top.scala 310:54]
      skip @[top.scala 281:43]
    node _T_68 = bits(cumod.io.instruction, 6, 0) @[top.scala 319:26]
    node _T_69 = eq(_T_68, UInt<6>("h037")) @[top.scala 319:32]
    when _T_69 : @[top.scala 319:45]
      regfmod.io.wdata <= immg.io.imm @[top.scala 320:18]
      skip @[top.scala 319:45]
    node _T_70 = bits(cumod.io.instruction, 6, 0) @[top.scala 322:26]
    node _T_71 = eq(_T_70, UInt<5>("h017")) @[top.scala 322:32]
    when _T_71 : @[top.scala 322:45]
      alumod.io.op <= UInt<1>("h00") @[top.scala 323:13]
      alumod.io.A <= pcmod.io.out @[top.scala 324:15]
      alumod.io.B <= immg.io.imm @[top.scala 325:15]
      dmmod.io.wr_enable <= UInt<1>("h01") @[top.scala 326:22]
      regfmod.io.wdata <= alumod.io.out @[top.scala 327:18]
      io.output <= regfmod.io.wdata @[top.scala 330:11]
      skip @[top.scala 322:45]
    node _T_72 = bits(cumod.io.instruction, 6, 0) @[top.scala 332:26]
    node _T_73 = eq(_T_72, UInt<7>("h06f")) @[top.scala 332:32]
    when _T_73 : @[top.scala 332:44]
      pcmod.io.jump2 <= UInt<1>("h01") @[top.scala 333:18]
      alumod.io.op <= UInt<1>("h00") @[top.scala 335:15]
      alumod.io.A <= pcmod.io.out @[top.scala 336:15]
      alumod.io.B <= immg.io.imm @[top.scala 337:15]
      dmmod.io.wr_enable <= UInt<1>("h01") @[top.scala 338:22]
      node _regfmod_io_wdata_T_49 = add(pcmod.io.out, UInt<3>("h04")) @[top.scala 340:38]
      node _regfmod_io_wdata_T_50 = tail(_regfmod_io_wdata_T_49, 1) @[top.scala 340:38]
      regfmod.io.wdata <= _regfmod_io_wdata_T_50 @[top.scala 340:20]
      pcmod.io.imm <= alumod.io.out @[top.scala 341:16]
      skip @[top.scala 332:44]
    node _T_74 = bits(cumod.io.instruction, 6, 0) @[top.scala 343:26]
    node _T_75 = eq(_T_74, UInt<7>("h067")) @[top.scala 343:32]
    when _T_75 : @[top.scala 343:44]
      pcmod.io.jump3 <= UInt<1>("h01") @[top.scala 344:18]
      alumod.io.op <= UInt<1>("h00") @[top.scala 346:15]
      alumod.io.A <= regfmod.io.rdata1 @[top.scala 347:13]
      alumod.io.B <= immg.io.imm @[top.scala 348:15]
      dmmod.io.wr_enable <= UInt<1>("h01") @[top.scala 349:22]
      node _regfmod_io_wdata_T_51 = add(pcmod.io.out, UInt<3>("h04")) @[top.scala 351:38]
      node _regfmod_io_wdata_T_52 = tail(_regfmod_io_wdata_T_51, 1) @[top.scala 351:38]
      regfmod.io.wdata <= _regfmod_io_wdata_T_52 @[top.scala 351:20]
      pcmod.io.imm <= alumod.io.out @[top.scala 352:16]
      skip @[top.scala 343:44]
    io.output <= regfmod.io.wdata @[top.scala 355:11]
    
